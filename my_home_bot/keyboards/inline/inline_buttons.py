from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta


def start_buttons():
    # –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    button1 = InlineKeyboardButton(text="–ë—é–¥–∂–µ—Çüí∞", callback_data="budget")
    button2 = InlineKeyboardButton(text="–ó–∞–¥–∞—á–∫–∏üìí", callback_data="tasks")
    button3 = InlineKeyboardButton(text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—éüí°", callback_data="idea")

    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    keyboard.add(button2)
    keyboard.add(button3)
    return keyboard


def start_budget_buttons(flag=False):
    # –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –±—é–¥–∂–µ—Ç
    button1 = InlineKeyboardButton(text="–î–æ—Ö–æ–¥üí¥", callback_data="income")
    button2 = InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥üí∏", callback_data="expend")
    button3 = InlineKeyboardButton(text="–ö–æ–ø–∏–ª–∫–∞üè¶", callback_data="piggy_bank")
    button4 = InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä", callback_data="statistic")
    button5 = InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∞–≤–æ–∫üîß", callback_data="hist_budg")

    spacer = InlineKeyboardButton(text="\u2003", callback_data="none")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1, button2)
    keyboard.add(button5)
    keyboard.add(spacer)
    keyboard.add(button3, button4)
    return keyboard


def start_menu_buttons(flag=False):
    # –∫–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    button1 = InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†", callback_data="main_menu")

    if flag:
        return button1
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    return keyboard


def add_cat_buttons(cat_name:str, flag=False):
    # –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    button1 = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data=cat_name)

    if flag:
        return button1
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    return keyboard


def back_buttons(way:str, flag=False):
    # –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    button1 = InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚è™", callback_data=way)

    if flag:
        return button1
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    return keyboard


def create_or_connect_to_budgbase(flag=False):
    # –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞—Ç—å –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –±—é–¥–∂–µ—Ç–∞
    button1 = InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å", callback_data="create_base_budg")
    button2 = InlineKeyboardButton(text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è", callback_data="connect_base_budg")
    if flag:
        return button1, button2
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1, button2)
    return keyboard


def correct_task_buttons(text ,task_id, flag=False, delete_message=True):
    # –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É
    delete_flag = '1' if delete_message else '0'
    button1 = InlineKeyboardButton(text, callback_data=f"correct_task_{task_id}_{delete_flag}")
    if flag:
        return button1
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    return keyboard


def create_task(flag=False):
    # –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    button1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data=f"add_task")
    if flag:
        return button1
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1)
    return keyboard


def deposit_and_subtract(flag=False):
    button1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data=f"deposit")
    button2 = InlineKeyboardButton('–£–±–∞–≤–∏—Ç—å', callback_data=f"subtract")
    if flag:
        return button1, button2
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1, button2)
    return keyboard


def task_edit_buttons(task_id, flag=False):
    """
        –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        ----------
        task_id : int
            ID –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ callback_data.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        -----------
        InlineKeyboardButton:
            –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è.
        """
    button1 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f"del_task_{task_id}")
    button2 = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f"edit_task_{task_id}")
    if flag:
        return button1, button2
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1, button2)
    return keyboard


def del_edit_money_buttons(money_id, flag=False):
    """
        –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ money_move.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        ----------
        money_id : int
            ID –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ callback_data.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        -----------
        InlineKeyboardButton:
            –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è.
        """
    button1 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f"del_mon_{money_id}")
    button2 = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f"ed_mon_{money_id}")
    if flag:
        return button1, button2
    keyboard = InlineKeyboardMarkup()
    keyboard.add(button1, button2)
    return keyboard


def create_history_buttons(history_data, current_page, total_pages):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–Ω–µ–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
    –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏.
    """
    keyboard = InlineKeyboardMarkup()
    for record in history_data:
        category = record['category']
        income = record['income']
        expenditure = record['expenditure']
        comment = record['comment'] if record['comment'] else "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"
        record_id = record['id']

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ: –¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥
        if income != 0:
            text = f"{category}: ü§ë{income} - '{comment}'"
        else:
            text = f"{category}: üîª{expenditure} - '{comment}'"

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
        button = InlineKeyboardButton(text=text, callback_data=f"edit_{record_id}")
        keyboard.add(button)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ", –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if current_page < total_pages-1:
        keyboard.add(InlineKeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ", callback_data=f"load_more_{current_page + 1}"), back_buttons('budget', True))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥—ã–¥—É—â–∏–µ", –µ—Å–ª–∏ –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if current_page > 0:
        keyboard.add(InlineKeyboardButton(text="–ü—Ä–µ–¥—ã–¥—É—â–∏–µ", callback_data=f"load_previous_{current_page - 1}"), back_buttons('budget', True))

    if (current_page >= total_pages-1) and  (current_page <= 0):
        keyboard.add(back_buttons('budget', True))

    return keyboard



